# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

environment:
  global:
  # TODO This is the Rust channel that build jobs will use by default but can be
  # overridden on a case by case basis down below
    RUST_VERSION: stable

    # TODO Update this to match the name of your project.
    CRATE_NAME: sputnikvm-dev

    GCP_PASSWD:
      secure: erzLJz7qT0kCJa+jZG6Sf9wwkfLYO2UDLzydkKTdwqA=

  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  matrix:
    # MinGW
    - TARGET: i686-pc-windows-gnu
    - TARGET: x86_64-pc-windows-gnu

    # MSVC
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

    # Testing other channels
    - TARGET: x86_64-pc-windows-gnu
      RUST_VERSION: nightly
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: nightly

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - set PATH=C:\msys64\usr\bin\;%PATH%
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V
  # Install janus.
  - curl -sL https://raw.githubusercontent.com/ethereumproject/janus/master/get-windows.sh | bash
  - set PATH=./janusbin;%PATH%
  # Set up version from git tags.
  - ps: $env:VERSION_BASE = "$(janus.exe version -format='v%M.%m.x')"
  - ps: $env:VERSION = "$(janus.exe version -format='v%M.%m.%C-%S')"
  - echo %VERSION_BASE% %VERSION%

# TODO This is the "test phase", tweak it as you see fit
test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% --release
    )

before_deploy:
  # TODO Update this to build the artifacts that matter to you
  - cargo rustc --target %TARGET% --release --bin svmdev -- -C lto
  - ps: .ci\before_deploy.ps1
  # Set up GCP upload.
  - nuget install secure-file -ExcludeVersion
  - secure-file\tools\secure-file -decrypt .ci\gcloud-appveyor.json.enc -secret %GCP_PASSWD% -out .ci\.gcloud.json

deploy_script:
  - ps: >-
      If ($env:APPVEYOR_REPO_BRANCH -eq 'gcp-deploy') {
          echo "Deploy to http://builds.etcdevteam.com/sputnikvm-dev/$env:VERSION_BASE/"
          janus.exe deploy -to="builds.etcdevteam.com/sputnikvm-dev/$env:VERSION_BASE/" -files="*.zip" -key="./.gcloud.json"
      }

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master
    - gcp-deploy

notifications:
  - provider: Email
    on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
